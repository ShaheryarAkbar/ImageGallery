[{"F:\\React-Internship\\imagegallery\\src\\index.js":"1","F:\\React-Internship\\imagegallery\\src\\App.jsx":"2","F:\\React-Internship\\imagegallery\\src\\GalleryReact.jsx":"3","F:\\React-Internship\\imagegallery\\src\\Menu.jsx":"4","F:\\React-Internship\\imagegallery\\src\\NewGalleryReact.jsx":"5","F:\\React-Internship\\imagegallery\\src\\NewCatMenu.jsx":"6","F:\\React-Internship\\imagegallery\\src\\NewMenu.jsx":"7"},{"size":187,"mtime":1631770207180,"results":"8","hashOfConfig":"9"},{"size":249,"mtime":1649228448563,"results":"10","hashOfConfig":"9"},{"size":3810,"mtime":1649229177180,"results":"11","hashOfConfig":"9"},{"size":3366,"mtime":1650176301676,"results":"12","hashOfConfig":"9"},{"size":1125,"mtime":1649228069338,"results":"13","hashOfConfig":"14"},{"size":1029,"mtime":1631959049954,"results":"15","hashOfConfig":"14"},{"size":2581,"mtime":1646546473013,"results":"16","hashOfConfig":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xysfic",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"vh9fcr",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},"F:\\React-Internship\\imagegallery\\src\\index.js",[],"F:\\React-Internship\\imagegallery\\src\\App.jsx",[],"F:\\React-Internship\\imagegallery\\src\\GalleryReact.jsx",["33","34"],"F:\\React-Internship\\imagegallery\\src\\Menu.jsx",[],"F:\\React-Internship\\imagegallery\\src\\NewGalleryReact.jsx",["35"],"F:\\React-Internship\\imagegallery\\src\\NewCatMenu.jsx",[],["36","37"],"F:\\React-Internship\\imagegallery\\src\\NewMenu.jsx",["38"],"import React from 'react'\r\n\r\nconst NewMenu = (props) => {\r\n    return (\r\n        <>\r\n             <div className=\"menu-items container-fluid mt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-11 mx-auto\">\r\n                        <div className=\"row my-5\">\r\n                            {\r\n                                props.items.map((elem) => {\r\n                                    const {id, name, imgsrc, description, price} = elem;\r\n\r\n                                    return (\r\n                                        <>\r\n                                        <div className=\"item1 col-12 col-md-6 col-lg-6 col-xl-4 my-3\" key={id}>\r\n                                            <div className=\"row Item-inside\">\r\n                                                <div className=\"col-12 col-md-12 col-lg-4 img-div\">\r\n                                                    <img src={imgsrc} alt={name} className=\"img-fluid\" />\r\n                                                </div>\r\n                                                <div className=\"col-12 col-md-12 col-lg-8\">\r\n                                                    <div className=\"main-title pt-4 pb-3\">\r\n                                                        <h1>{name}</h1>\r\n                                                        <p>{description}</p>\r\n                                                    </div>\r\n                                                    <div className=\"menu-price-book\">\r\n                                                        <div className=\"price-book-divide d-flex justify-content-between\">\r\n                                                            <h2>{price}</h2>\r\n                                                            <a href=\"#\">\r\n                                                                <button className=\"btn btn-primary\">Order Now</button>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        </>\r\n                                    )\r\n                                })\r\n                            }                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewMenu\r\n",{"ruleId":"39","severity":1,"message":"40","line":17,"column":35,"nodeType":"41","messageId":"42","endLine":17,"endColumn":37},{"ruleId":"43","severity":1,"message":"44","line":62,"column":61,"nodeType":"45","endLine":62,"endColumn":73},{"ruleId":"46","severity":1,"message":"47","line":15,"column":22,"nodeType":"48","messageId":"49","endLine":15,"endColumn":33},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"43","severity":1,"message":"44","line":29,"column":61,"nodeType":"45","endLine":29,"endColumn":73},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'setCatItems' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-global-assign","no-unsafe-negation"]